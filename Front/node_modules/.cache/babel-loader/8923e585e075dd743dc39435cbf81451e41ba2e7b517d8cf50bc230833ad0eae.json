{"ast":null,"code":"'use strict';\n\nconst Collations = require('../const/collations.js');\nconst urlFormat = /mariadb:\\/\\/(([^/@:]+)?(:([^/]+))?@)?(([^/:]+)(:([0-9]+))?)\\/([^?]+)(\\?(.*))?$/;\n\n/**\n * Default option similar to mysql driver.\n * known differences\n * - no queryFormat option. Permitting client to parse is a security risk. Best is to give SQL + parameters\n *   Only possible Objects are :\n *   - Buffer\n *   - Date\n *   - Object that implement toSqlString function\n *   - JSON object\n * + rowsAsArray (in mysql2) permit to have rows by index, not by name. Avoiding to parsing metadata string => faster\n */\nclass ConnectionOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnectionOptions.parse(opts);\n    }\n    if (!opts) opts = {};\n    this.host = opts.host || 'localhost';\n    this.port = opts.port || 3306;\n    this.user = opts.user || process.env.USERNAME;\n    this.password = opts.password;\n    this.database = opts.database;\n    this.stream = opts.stream;\n    if (opts.charset && typeof opts.charset === 'string') {\n      this.collation = Collations.fromCharset(opts.charset.toLowerCase());\n      if (this.collation === undefined) {\n        this.collation = Collations.fromName(opts.charset.toUpperCase());\n        if (this.collation !== undefined) {\n          console.log(\"warning: please use option 'collation' \" + \"in replacement of 'charset' when using a collation name ('\" + opts.charset + \"')\\n\" + \"(collation looks like 'UTF8MB4_UNICODE_CI', charset like 'utf8').\");\n        }\n      }\n      if (this.collation === undefined) throw new RangeError(\"Unknown charset '\" + opts.charset + \"'\");\n    } else if (opts.collation && typeof opts.collation === 'string') {\n      this.collation = Collations.fromName(opts.collation.toUpperCase());\n      if (this.collation === undefined) throw new RangeError(\"Unknown collation '\" + opts.collation + \"'\");\n    } else {\n      this.collation = opts.charsetNumber ? Collations.fromIndex(opts.charsetNumber) : undefined;\n    }\n\n    // connection options\n    this.initSql = opts.initSql;\n    this.connectTimeout = opts.connectTimeout === undefined ? 1000 : opts.connectTimeout;\n    this.connectAttributes = opts.connectAttributes || false;\n    this.compress = opts.compress || false;\n    this.rsaPublicKey = opts.rsaPublicKey;\n    this.cachingRsaPublicKey = opts.cachingRsaPublicKey;\n    this.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval || false;\n    this.forceVersionCheck = opts.forceVersionCheck || false;\n    this.maxAllowedPacket = opts.maxAllowedPacket;\n    this.permitConnectionWhenExpired = opts.permitConnectionWhenExpired || false;\n    this.pipelining = opts.pipelining;\n    this.timezone = opts.timezone || 'local';\n    this.socketPath = opts.socketPath;\n    this.sessionVariables = opts.sessionVariables;\n    this.ssl = opts.ssl;\n    if (opts.ssl) {\n      if (typeof opts.ssl !== 'boolean' && typeof opts.ssl !== 'string') {\n        this.ssl.rejectUnauthorized = opts.ssl.rejectUnauthorized !== false;\n      }\n    }\n\n    // socket\n    this.queryTimeout = opts.queryTimeout === undefined ? 0 : opts.queryTimeout;\n    this.socketTimeout = opts.socketTimeout === undefined ? 0 : opts.socketTimeout;\n    this.keepAliveDelay = opts.keepAliveDelay === undefined ? 0 : opts.keepAliveDelay;\n\n    // log\n    this.debug = opts.debug || false;\n    this.debugCompress = opts.debugCompress || false;\n    this.debugLen = opts.debugLen || 256;\n    if (opts.logger) {\n      if (typeof opts.logger === 'function') {\n        this.logger = {\n          network: opts.logger,\n          query: opts.logger,\n          error: opts.logger,\n          logParam: true\n        };\n      } else {\n        this.logger = {\n          network: opts.logger.network,\n          query: opts.logger.query,\n          error: opts.logger.error,\n          logParam: opts.logger.logParam == null ? true : opts.logger.logParam\n        };\n      }\n    } else {\n      this.logger = {\n        network: null,\n        query: null,\n        error: null,\n        logParam: false\n      };\n      if ((this.debug || this.debugCompress) && !this.logger.network) {\n        this.logger.network = console.log;\n      }\n    }\n    this.debug = !!this.logger.network;\n    this.trace = opts.trace || false;\n\n    // result-set\n    this.checkDuplicate = opts.checkDuplicate === undefined ? true : opts.checkDuplicate;\n    this.dateStrings = opts.dateStrings || false;\n    this.foundRows = opts.foundRows === undefined || opts.foundRows;\n    this.metaAsArray = opts.metaAsArray || false;\n    this.metaEnumerable = opts.metaEnumerable || false;\n    this.multipleStatements = opts.multipleStatements || false;\n    this.namedPlaceholders = opts.namedPlaceholders || false;\n    this.nestTables = opts.nestTables;\n    this.autoJsonMap = opts.autoJsonMap === undefined ? true : opts.autoJsonMap;\n    this.bitOneIsBoolean = opts.bitOneIsBoolean === undefined ? true : opts.bitOneIsBoolean;\n    this.arrayParenthesis = opts.arrayParenthesis || false;\n    this.permitSetMultiParamEntries = opts.permitSetMultiParamEntries || false;\n    this.rowsAsArray = opts.rowsAsArray || false;\n    this.typeCast = opts.typeCast;\n    if (this.typeCast !== undefined && typeof this.typeCast !== 'function') {\n      this.typeCast = undefined;\n    }\n    this.bulk = opts.bulk === undefined || opts.bulk;\n    this.checkNumberRange = opts.checkNumberRange || false;\n\n    // coherence check\n    if (opts.pipelining === undefined) {\n      this.permitLocalInfile = opts.permitLocalInfile || false;\n      this.pipelining = !this.permitLocalInfile;\n    } else {\n      this.pipelining = opts.pipelining;\n      if (opts.permitLocalInfile === true && this.pipelining) {\n        throw new Error('enabling options `permitLocalInfile` and `pipelining` is not possible, options are incompatible.');\n      }\n      this.permitLocalInfile = this.pipelining ? false : opts.permitLocalInfile || false;\n    }\n    this.prepareCacheLength = opts.prepareCacheLength === undefined ? 256 : opts.prepareCacheLength;\n    this.restrictedAuth = opts.restrictedAuth;\n    if (this.restrictedAuth !== undefined && this.restrictedAuth !== null) {\n      if (!Array.isArray(this.restrictedAuth)) {\n        this.restrictedAuth = this.restrictedAuth.split(',');\n      }\n    }\n\n    // for compatibility with 2.x version and mysql/mysql2\n    this.bigIntAsNumber = opts.bigIntAsNumber || false;\n    this.insertIdAsNumber = opts.insertIdAsNumber || false;\n    this.decimalAsNumber = opts.decimalAsNumber || false;\n    this.supportBigNumbers = opts.supportBigNumbers || false;\n    this.bigNumberStrings = opts.bigNumberStrings || false;\n    if (this.maxAllowedPacket && !Number.isInteger(this.maxAllowedPacket)) {\n      throw new RangeError(\"maxAllowedPacket must be an integer. was '\" + this.maxAllowedPacket + \"'\");\n    }\n  }\n\n  /**\n   * When parsing from String, correcting type.\n   *\n   * @param opts options\n   * @return {opts}\n   */\n  static parseOptionDataType(opts) {\n    if (opts.bulk) opts.bulk = opts.bulk === 'true';\n    if (opts.allowPublicKeyRetrieval) opts.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval === 'true';\n    if (opts.insertIdAsNumber) opts.insertIdAsNumber = opts.insertIdAsNumber === 'true';\n    if (opts.decimalAsNumber) opts.decimalAsNumber = opts.decimalAsNumber === 'true';\n    if (opts.bigIntAsNumber) opts.bigIntAsNumber = opts.bigIntAsNumber === 'true';\n    if (opts.charsetNumber && !isNaN(Number.parseInt(opts.charsetNumber))) {\n      opts.charsetNumber = Number.parseInt(opts.charsetNumber);\n    }\n    if (opts.compress) opts.compress = opts.compress === 'true';\n    if (opts.connectAttributes) opts.connectAttributes = JSON.parse(opts.connectAttributes);\n    if (opts.connectTimeout) opts.connectTimeout = parseInt(opts.connectTimeout);\n    if (opts.keepAliveDelay) opts.keepAliveDelay = parseInt(opts.keepAliveDelay);\n    if (opts.socketTimeout) opts.socketTimeout = parseInt(opts.socketTimeout);\n    if (opts.dateStrings) opts.dateStrings = opts.dateStrings === 'true';\n    if (opts.debug) opts.debug = opts.debug === 'true';\n    if (opts.autoJsonMap) opts.autoJsonMap = opts.autoJsonMap === 'true';\n    if (opts.arrayParenthesis) opts.arrayParenthesis = opts.arrayParenthesis === 'true';\n    if (opts.checkDuplicate) opts.checkDuplicate = opts.checkDuplicate === 'true';\n    if (opts.debugCompress) opts.debugCompress = opts.debugCompress === 'true';\n    if (opts.debugLen) opts.debugLen = parseInt(opts.debugLen);\n    if (opts.prepareCacheLength) opts.prepareCacheLength = parseInt(opts.prepareCacheLength);\n    if (opts.queryTimeout) opts.queryTimeout = parseInt(opts.queryTimeout);\n    if (opts.foundRows) opts.foundRows = opts.foundRows === 'true';\n    if (opts.maxAllowedPacket && !isNaN(Number.parseInt(opts.maxAllowedPacket))) opts.maxAllowedPacket = parseInt(opts.maxAllowedPacket);\n    if (opts.metaAsArray) opts.metaAsArray = opts.metaAsArray === 'true';\n    if (opts.metaEnumerable) opts.metaEnumerable = opts.metaEnumerable === 'true';\n    if (opts.multipleStatements) opts.multipleStatements = opts.multipleStatements === 'true';\n    if (opts.namedPlaceholders) opts.namedPlaceholders = opts.namedPlaceholders === 'true';\n    if (opts.nestTables) opts.nestTables = opts.nestTables === 'true';\n    if (opts.permitSetMultiParamEntries) opts.permitSetMultiParamEntries = opts.permitSetMultiParamEntries === 'true';\n    if (opts.pipelining) opts.pipelining = opts.pipelining === 'true';\n    if (opts.forceVersionCheck) opts.forceVersionCheck = opts.forceVersionCheck === 'true';\n    if (opts.rowsAsArray) opts.rowsAsArray = opts.rowsAsArray === 'true';\n    if (opts.trace) opts.trace = opts.trace === 'true';\n    if (opts.ssl && (opts.ssl === 'true' || opts.ssl === 'false')) opts.ssl = opts.ssl === 'true';\n    if (opts.bitOneIsBoolean) opts.bitOneIsBoolean = opts.bitOneIsBoolean === 'true';\n    return opts;\n  }\n  static parse(opts) {\n    const matchResults = opts.match(urlFormat);\n    if (!matchResults) {\n      throw new Error(`error parsing connection string '${opts}'. format must be 'mariadb://[<user>[:<password>]@]<host>[:<port>]/[<db>[?<opt1>=<value1>[&<opt2>=<value2>]]]'`);\n    }\n    const options = {\n      user: matchResults[2] ? decodeURIComponent(matchResults[2]) : undefined,\n      password: matchResults[4] ? decodeURIComponent(matchResults[4]) : undefined,\n      host: matchResults[6] ? decodeURIComponent(matchResults[6]) : matchResults[6],\n      port: matchResults[8] ? parseInt(matchResults[8]) : undefined,\n      database: matchResults[9] ? decodeURIComponent(matchResults[9]) : matchResults[9]\n    };\n    const variousOptsString = matchResults[11];\n    if (variousOptsString) {\n      const keyValues = variousOptsString.split('&');\n      keyValues.forEach(function (keyVal) {\n        const equalIdx = keyVal.indexOf('=');\n        if (equalIdx !== 1) {\n          let val = keyVal.substring(equalIdx + 1);\n          val = val ? decodeURIComponent(val) : undefined;\n          options[keyVal.substring(0, equalIdx)] = val;\n        }\n      });\n    }\n    return this.parseOptionDataType(options);\n  }\n}\nmodule.exports = ConnectionOptions;","map":{"version":3,"names":["Collations","require","urlFormat","ConnectionOptions","constructor","opts","parse","host","port","user","process","env","USERNAME","password","database","stream","charset","collation","fromCharset","toLowerCase","undefined","fromName","toUpperCase","console","log","RangeError","charsetNumber","fromIndex","initSql","connectTimeout","connectAttributes","compress","rsaPublicKey","cachingRsaPublicKey","allowPublicKeyRetrieval","forceVersionCheck","maxAllowedPacket","permitConnectionWhenExpired","pipelining","timezone","socketPath","sessionVariables","ssl","rejectUnauthorized","queryTimeout","socketTimeout","keepAliveDelay","debug","debugCompress","debugLen","logger","network","query","error","logParam","trace","checkDuplicate","dateStrings","foundRows","metaAsArray","metaEnumerable","multipleStatements","namedPlaceholders","nestTables","autoJsonMap","bitOneIsBoolean","arrayParenthesis","permitSetMultiParamEntries","rowsAsArray","typeCast","bulk","checkNumberRange","permitLocalInfile","Error","prepareCacheLength","restrictedAuth","Array","isArray","split","bigIntAsNumber","insertIdAsNumber","decimalAsNumber","supportBigNumbers","bigNumberStrings","Number","isInteger","parseOptionDataType","isNaN","parseInt","JSON","matchResults","match","options","decodeURIComponent","variousOptsString","keyValues","forEach","keyVal","equalIdx","indexOf","val","substring","module","exports"],"sources":["/home/warameur/Documents/velocity-data-viz/node_modules/mariadb/lib/config/connection-options.js"],"sourcesContent":["'use strict';\n\nconst Collations = require('../const/collations.js');\nconst urlFormat = /mariadb:\\/\\/(([^/@:]+)?(:([^/]+))?@)?(([^/:]+)(:([0-9]+))?)\\/([^?]+)(\\?(.*))?$/;\n\n/**\n * Default option similar to mysql driver.\n * known differences\n * - no queryFormat option. Permitting client to parse is a security risk. Best is to give SQL + parameters\n *   Only possible Objects are :\n *   - Buffer\n *   - Date\n *   - Object that implement toSqlString function\n *   - JSON object\n * + rowsAsArray (in mysql2) permit to have rows by index, not by name. Avoiding to parsing metadata string => faster\n */\nclass ConnectionOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnectionOptions.parse(opts);\n    }\n\n    if (!opts) opts = {};\n    this.host = opts.host || 'localhost';\n    this.port = opts.port || 3306;\n    this.user = opts.user || process.env.USERNAME;\n    this.password = opts.password;\n    this.database = opts.database;\n    this.stream = opts.stream;\n    if (opts.charset && typeof opts.charset === 'string') {\n      this.collation = Collations.fromCharset(opts.charset.toLowerCase());\n      if (this.collation === undefined) {\n        this.collation = Collations.fromName(opts.charset.toUpperCase());\n        if (this.collation !== undefined) {\n          console.log(\n            \"warning: please use option 'collation' \" +\n              \"in replacement of 'charset' when using a collation name ('\" +\n              opts.charset +\n              \"')\\n\" +\n              \"(collation looks like 'UTF8MB4_UNICODE_CI', charset like 'utf8').\"\n          );\n        }\n      }\n      if (this.collation === undefined) throw new RangeError(\"Unknown charset '\" + opts.charset + \"'\");\n    } else if (opts.collation && typeof opts.collation === 'string') {\n      this.collation = Collations.fromName(opts.collation.toUpperCase());\n      if (this.collation === undefined) throw new RangeError(\"Unknown collation '\" + opts.collation + \"'\");\n    } else {\n      this.collation = opts.charsetNumber ? Collations.fromIndex(opts.charsetNumber) : undefined;\n    }\n\n    // connection options\n    this.initSql = opts.initSql;\n    this.connectTimeout = opts.connectTimeout === undefined ? 1000 : opts.connectTimeout;\n    this.connectAttributes = opts.connectAttributes || false;\n    this.compress = opts.compress || false;\n    this.rsaPublicKey = opts.rsaPublicKey;\n    this.cachingRsaPublicKey = opts.cachingRsaPublicKey;\n    this.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval || false;\n    this.forceVersionCheck = opts.forceVersionCheck || false;\n    this.maxAllowedPacket = opts.maxAllowedPacket;\n    this.permitConnectionWhenExpired = opts.permitConnectionWhenExpired || false;\n    this.pipelining = opts.pipelining;\n    this.timezone = opts.timezone || 'local';\n    this.socketPath = opts.socketPath;\n    this.sessionVariables = opts.sessionVariables;\n    this.ssl = opts.ssl;\n    if (opts.ssl) {\n      if (typeof opts.ssl !== 'boolean' && typeof opts.ssl !== 'string') {\n        this.ssl.rejectUnauthorized = opts.ssl.rejectUnauthorized !== false;\n      }\n    }\n\n    // socket\n    this.queryTimeout = opts.queryTimeout === undefined ? 0 : opts.queryTimeout;\n    this.socketTimeout = opts.socketTimeout === undefined ? 0 : opts.socketTimeout;\n    this.keepAliveDelay = opts.keepAliveDelay === undefined ? 0 : opts.keepAliveDelay;\n\n    // log\n    this.debug = opts.debug || false;\n    this.debugCompress = opts.debugCompress || false;\n    this.debugLen = opts.debugLen || 256;\n\n    if (opts.logger) {\n      if (typeof opts.logger === 'function') {\n        this.logger = {\n          network: opts.logger,\n          query: opts.logger,\n          error: opts.logger,\n          logParam: true\n        };\n      } else {\n        this.logger = {\n          network: opts.logger.network,\n          query: opts.logger.query,\n          error: opts.logger.error,\n          logParam: opts.logger.logParam == null ? true : opts.logger.logParam\n        };\n      }\n    } else {\n      this.logger = { network: null, query: null, error: null, logParam: false };\n      if ((this.debug || this.debugCompress) && !this.logger.network) {\n        this.logger.network = console.log;\n      }\n    }\n    this.debug = !!this.logger.network;\n\n    this.trace = opts.trace || false;\n\n    // result-set\n    this.checkDuplicate = opts.checkDuplicate === undefined ? true : opts.checkDuplicate;\n    this.dateStrings = opts.dateStrings || false;\n    this.foundRows = opts.foundRows === undefined || opts.foundRows;\n    this.metaAsArray = opts.metaAsArray || false;\n    this.metaEnumerable = opts.metaEnumerable || false;\n    this.multipleStatements = opts.multipleStatements || false;\n    this.namedPlaceholders = opts.namedPlaceholders || false;\n    this.nestTables = opts.nestTables;\n    this.autoJsonMap = opts.autoJsonMap === undefined ? true : opts.autoJsonMap;\n    this.bitOneIsBoolean = opts.bitOneIsBoolean === undefined ? true : opts.bitOneIsBoolean;\n    this.arrayParenthesis = opts.arrayParenthesis || false;\n    this.permitSetMultiParamEntries = opts.permitSetMultiParamEntries || false;\n    this.rowsAsArray = opts.rowsAsArray || false;\n    this.typeCast = opts.typeCast;\n    if (this.typeCast !== undefined && typeof this.typeCast !== 'function') {\n      this.typeCast = undefined;\n    }\n    this.bulk = opts.bulk === undefined || opts.bulk;\n    this.checkNumberRange = opts.checkNumberRange || false;\n\n    // coherence check\n    if (opts.pipelining === undefined) {\n      this.permitLocalInfile = opts.permitLocalInfile || false;\n      this.pipelining = !this.permitLocalInfile;\n    } else {\n      this.pipelining = opts.pipelining;\n      if (opts.permitLocalInfile === true && this.pipelining) {\n        throw new Error(\n          'enabling options `permitLocalInfile` and `pipelining` is not possible, options are incompatible.'\n        );\n      }\n      this.permitLocalInfile = this.pipelining ? false : opts.permitLocalInfile || false;\n    }\n    this.prepareCacheLength = opts.prepareCacheLength === undefined ? 256 : opts.prepareCacheLength;\n    this.restrictedAuth = opts.restrictedAuth;\n    if (this.restrictedAuth !== undefined && this.restrictedAuth !== null) {\n      if (!Array.isArray(this.restrictedAuth)) {\n        this.restrictedAuth = this.restrictedAuth.split(',');\n      }\n    }\n\n    // for compatibility with 2.x version and mysql/mysql2\n    this.bigIntAsNumber = opts.bigIntAsNumber || false;\n    this.insertIdAsNumber = opts.insertIdAsNumber || false;\n    this.decimalAsNumber = opts.decimalAsNumber || false;\n    this.supportBigNumbers = opts.supportBigNumbers || false;\n    this.bigNumberStrings = opts.bigNumberStrings || false;\n\n    if (this.maxAllowedPacket && !Number.isInteger(this.maxAllowedPacket)) {\n      throw new RangeError(\"maxAllowedPacket must be an integer. was '\" + this.maxAllowedPacket + \"'\");\n    }\n  }\n\n  /**\n   * When parsing from String, correcting type.\n   *\n   * @param opts options\n   * @return {opts}\n   */\n  static parseOptionDataType(opts) {\n    if (opts.bulk) opts.bulk = opts.bulk === 'true';\n    if (opts.allowPublicKeyRetrieval) opts.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval === 'true';\n\n    if (opts.insertIdAsNumber) opts.insertIdAsNumber = opts.insertIdAsNumber === 'true';\n    if (opts.decimalAsNumber) opts.decimalAsNumber = opts.decimalAsNumber === 'true';\n    if (opts.bigIntAsNumber) opts.bigIntAsNumber = opts.bigIntAsNumber === 'true';\n    if (opts.charsetNumber && !isNaN(Number.parseInt(opts.charsetNumber))) {\n      opts.charsetNumber = Number.parseInt(opts.charsetNumber);\n    }\n    if (opts.compress) opts.compress = opts.compress === 'true';\n    if (opts.connectAttributes) opts.connectAttributes = JSON.parse(opts.connectAttributes);\n    if (opts.connectTimeout) opts.connectTimeout = parseInt(opts.connectTimeout);\n    if (opts.keepAliveDelay) opts.keepAliveDelay = parseInt(opts.keepAliveDelay);\n    if (opts.socketTimeout) opts.socketTimeout = parseInt(opts.socketTimeout);\n    if (opts.dateStrings) opts.dateStrings = opts.dateStrings === 'true';\n    if (opts.debug) opts.debug = opts.debug === 'true';\n    if (opts.autoJsonMap) opts.autoJsonMap = opts.autoJsonMap === 'true';\n    if (opts.arrayParenthesis) opts.arrayParenthesis = opts.arrayParenthesis === 'true';\n\n    if (opts.checkDuplicate) opts.checkDuplicate = opts.checkDuplicate === 'true';\n    if (opts.debugCompress) opts.debugCompress = opts.debugCompress === 'true';\n    if (opts.debugLen) opts.debugLen = parseInt(opts.debugLen);\n    if (opts.prepareCacheLength) opts.prepareCacheLength = parseInt(opts.prepareCacheLength);\n    if (opts.queryTimeout) opts.queryTimeout = parseInt(opts.queryTimeout);\n    if (opts.foundRows) opts.foundRows = opts.foundRows === 'true';\n    if (opts.maxAllowedPacket && !isNaN(Number.parseInt(opts.maxAllowedPacket)))\n      opts.maxAllowedPacket = parseInt(opts.maxAllowedPacket);\n    if (opts.metaAsArray) opts.metaAsArray = opts.metaAsArray === 'true';\n    if (opts.metaEnumerable) opts.metaEnumerable = opts.metaEnumerable === 'true';\n    if (opts.multipleStatements) opts.multipleStatements = opts.multipleStatements === 'true';\n    if (opts.namedPlaceholders) opts.namedPlaceholders = opts.namedPlaceholders === 'true';\n    if (opts.nestTables) opts.nestTables = opts.nestTables === 'true';\n    if (opts.permitSetMultiParamEntries) opts.permitSetMultiParamEntries = opts.permitSetMultiParamEntries === 'true';\n    if (opts.pipelining) opts.pipelining = opts.pipelining === 'true';\n    if (opts.forceVersionCheck) opts.forceVersionCheck = opts.forceVersionCheck === 'true';\n    if (opts.rowsAsArray) opts.rowsAsArray = opts.rowsAsArray === 'true';\n    if (opts.trace) opts.trace = opts.trace === 'true';\n    if (opts.ssl && (opts.ssl === 'true' || opts.ssl === 'false')) opts.ssl = opts.ssl === 'true';\n    if (opts.bitOneIsBoolean) opts.bitOneIsBoolean = opts.bitOneIsBoolean === 'true';\n    return opts;\n  }\n\n  static parse(opts) {\n    const matchResults = opts.match(urlFormat);\n\n    if (!matchResults) {\n      throw new Error(\n        `error parsing connection string '${opts}'. format must be 'mariadb://[<user>[:<password>]@]<host>[:<port>]/[<db>[?<opt1>=<value1>[&<opt2>=<value2>]]]'`\n      );\n    }\n    const options = {\n      user: matchResults[2] ? decodeURIComponent(matchResults[2]) : undefined,\n      password: matchResults[4] ? decodeURIComponent(matchResults[4]) : undefined,\n      host: matchResults[6] ? decodeURIComponent(matchResults[6]) : matchResults[6],\n      port: matchResults[8] ? parseInt(matchResults[8]) : undefined,\n      database: matchResults[9] ? decodeURIComponent(matchResults[9]) : matchResults[9]\n    };\n\n    const variousOptsString = matchResults[11];\n    if (variousOptsString) {\n      const keyValues = variousOptsString.split('&');\n      keyValues.forEach(function (keyVal) {\n        const equalIdx = keyVal.indexOf('=');\n        if (equalIdx !== 1) {\n          let val = keyVal.substring(equalIdx + 1);\n          val = val ? decodeURIComponent(val) : undefined;\n          options[keyVal.substring(0, equalIdx)] = val;\n        }\n      });\n    }\n\n    return this.parseOptionDataType(options);\n  }\n}\n\nmodule.exports = ConnectionOptions;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}