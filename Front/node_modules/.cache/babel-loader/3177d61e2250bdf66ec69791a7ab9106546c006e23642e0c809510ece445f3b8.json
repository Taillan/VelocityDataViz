{"ast":null,"code":"const mariadb = require('mariadb');\nconst pool = mariadb.createPool({\n  host: '192.168.1.11',\n  user: 'root',\n  password: 'rootroot',\n  connectionLimit: 5\n});\nasync function connectToDatabase() {\n  let conn;\n  try {\n    console.log(\"trying connection\");\n    conn = await pool.getConnection();\n    console.log(\"connected\");\n    const DB = await conn.query(\"USE VelocityAppDB;\");\n    console.log(DB);\n    createTable(conn);\n  } catch (err) {\n    throw err;\n  } finally {\n    if (conn) return conn.end();\n  }\n}\nasync function createTable(conn) {\n  await conn.query(`\n  CREATE TABLE IF NOT EXISTS velocity\n  (\n    exercise                VARCHAR(30),\n    set_number                     INT,\n    rep                     INT,\n    weight                  INT,\n    metric                  VARCHAR(5),\n    rpe                     VARCHAR(3),\n    tags                    VARCHAR(50),\n    start_time              VARCHAR(20),\n    rest_time               VARCHAR(10),\n    avg_velocity            FLOAT,\n    rom                     INT,\n    peak_velocity           FLOAT,\n    peak_velocity_location  INT,\n    duration_of_rep         FLOAT\n  )\n`);\n  return result;\n}\nmodule.exports = connectToDatabase();","map":{"version":3,"names":["mariadb","require","pool","createPool","host","user","password","connectionLimit","connectToDatabase","conn","console","log","getConnection","DB","query","createTable","err","end","result","module","exports"],"sources":["/home/warameur/Documents/velocity-data-viz/src/dbScript/db.js"],"sourcesContent":["const mariadb = require('mariadb');\n\nconst pool = mariadb.createPool({\n  host: '192.168.1.11', \n  user:'root', \n  password: 'rootroot',\n  connectionLimit: 5\n});\n\nasync function connectToDatabase() {\n  let conn;\n  try {\n  console.log(\"trying connection\");\n\tconn = await pool.getConnection();\n  console.log(\"connected\");\n\tconst DB = await conn.query(\"USE VelocityAppDB;\");\n\tconsole.log(DB);\n  createTable(conn);\n  } catch (err) {\n\t  throw err;\n  } finally {\n\t  if (conn) return conn.end();\n  }\n}\n\nasync function createTable(conn) {\n  await conn.query(`\n  CREATE TABLE IF NOT EXISTS velocity\n  (\n    exercise                VARCHAR(30),\n    set_number                     INT,\n    rep                     INT,\n    weight                  INT,\n    metric                  VARCHAR(5),\n    rpe                     VARCHAR(3),\n    tags                    VARCHAR(50),\n    start_time              VARCHAR(20),\n    rest_time               VARCHAR(10),\n    avg_velocity            FLOAT,\n    rom                     INT,\n    peak_velocity           FLOAT,\n    peak_velocity_location  INT,\n    duration_of_rep         FLOAT\n  )\n`);\nreturn result;\n}\n\nmodule.exports = connectToDatabase();"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAElC,MAAMC,IAAI,GAAGF,OAAO,CAACG,UAAU,CAAC;EAC9BC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAC,MAAM;EACXC,QAAQ,EAAE,UAAU;EACpBC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,eAAeC,iBAAiBA,CAAA,EAAG;EACjC,IAAIC,IAAI;EACR,IAAI;IACJC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IACjCF,IAAI,GAAG,MAAMP,IAAI,CAACU,aAAa,EAAE;IAChCF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACzB,MAAME,EAAE,GAAG,MAAMJ,IAAI,CAACK,KAAK,CAAC,oBAAoB,CAAC;IACjDJ,OAAO,CAACC,GAAG,CAACE,EAAE,CAAC;IACdE,WAAW,CAACN,IAAI,CAAC;EACjB,CAAC,CAAC,OAAOO,GAAG,EAAE;IACb,MAAMA,GAAG;EACV,CAAC,SAAS;IACT,IAAIP,IAAI,EAAE,OAAOA,IAAI,CAACQ,GAAG,EAAE;EAC5B;AACF;AAEA,eAAeF,WAAWA,CAACN,IAAI,EAAE;EAC/B,MAAMA,IAAI,CAACK,KAAK,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;EACF,OAAOI,MAAM;AACb;AAEAC,MAAM,CAACC,OAAO,GAAGZ,iBAAiB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}