{"ast":null,"code":"'use strict';\n\nconst Command = require('../command');\nconst InitialHandshake = require('./initial-handshake');\nconst ClientHandshakeResponse = require('./client-handshake-response');\nconst SslRequest = require('./ssl-request');\nconst ClientCapabilities = require('./client-capabilities');\nconst Errors = require('../../misc/errors');\nconst Capabilities = require('../../const/capabilities');\nconst Collations = require('../../const/collations');\n\n/**\n * Handle handshake.\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/\n */\nclass Handshake extends Command {\n  constructor(cmdParam, resolve, reject, _createSecureContext, _addCommand, getSocket) {\n    super(cmdParam, resolve, reject);\n    this.cmdParam = cmdParam;\n    this._createSecureContext = _createSecureContext;\n    this._addCommand = _addCommand;\n    this.getSocket = getSocket;\n    this.onPacketReceive = this.parseHandshakeInit;\n    this.plugin = this;\n  }\n  parseHandshakeInit(packet, out, opts, info) {\n    if (packet.peek() === 0xff) {\n      //in case that some host is not permit to connect server\n      const authErr = packet.readError(info);\n      authErr.fatal = true;\n      return this.throwError(authErr, info);\n    }\n    let handshake = new InitialHandshake(packet, info);\n\n    // handle default collation.\n    if (opts.collation) {\n      // collation has been set using charset.\n      // If server use same charset, use server collation.\n      if (!opts.charset || info.collation.charset !== opts.collation.charset) {\n        info.collation = opts.collation;\n      }\n    } else if (info.collation.charset !== 'utf8' || info.collation.maxLength === 3) {\n      // if not utf8mb4 and no configuration, force to use UTF8MB4_UNICODE_CI\n      info.collation = Collations.fromIndex(224);\n    }\n    ClientCapabilities.init(opts, info);\n    if (opts.ssl) {\n      if (info.serverCapabilities & Capabilities.SSL) {\n        info.clientCapabilities |= Capabilities.SSL;\n        SslRequest.send(this, out, info, opts);\n        this._createSecureContext(ClientHandshakeResponse.send.bind(this, this, out, opts, handshake.pluginName, info));\n      } else {\n        return this.throwNewError('Trying to connect with ssl, but ssl not enabled in the server', true, info, '08S01', Errors.ER_SERVER_SSL_DISABLED);\n      }\n    } else {\n      ClientHandshakeResponse.send(this, out, opts, handshake.pluginName, info);\n    }\n    this.onPacketReceive = this.handshakeResult;\n  }\n\n  /**\n   * Fast-path handshake results :\n   *  - if plugin was the one expected by server, server will send OK_Packet / ERR_Packet.\n   *  - if not, server send an AuthSwitchRequest packet, indicating the specific PLUGIN to use with this user.\n   *    dispatching to plugin handler then.\n   *\n   * @param packet    current packet\n   * @param out       output buffer\n   * @param opts      options\n   * @param info      connection info\n   * @returns {*}     return null if authentication succeed, depending on plugin conversation if not finished\n   */\n  handshakeResult(packet, out, opts, info) {\n    const marker = packet.peek();\n    switch (marker) {\n      //*********************************************************************************************************\n      //* AuthSwitchRequest packet\n      //*********************************************************************************************************\n      case 0xfe:\n        this.plugin.onPacketReceive = null;\n        this.plugin.emit('send_end');\n        this.plugin.emit('end');\n        this.dispatchAuthSwitchRequest(packet, out, opts, info);\n        return;\n\n      //*********************************************************************************************************\n      //* OK_Packet - authentication succeeded\n      //*********************************************************************************************************\n      case 0x00:\n        this.plugin.onPacketReceive = null;\n        packet.skip(1); //skip header\n        packet.skipLengthCodedNumber(); //skip affected rows\n        packet.skipLengthCodedNumber(); //skip last insert id\n        info.status = packet.readUInt16();\n        this.plugin.emit('send_end');\n        return this.plugin.successEnd();\n\n      //*********************************************************************************************************\n      //* ERR_Packet\n      //*********************************************************************************************************\n      case 0xff:\n        this.plugin.onPacketReceive = null;\n        const authErr = packet.readError(info, this.displaySql());\n        authErr.fatal = true;\n        return this.plugin.throwError(authErr, info);\n\n      //*********************************************************************************************************\n      //* unexpected\n      //*********************************************************************************************************\n      default:\n        this.throwNewError(`Unexpected type of packet during handshake phase : ${marker}`, true, info, '42000', Errors.ER_AUTHENTICATION_BAD_PACKET);\n    }\n  }\n\n  /**\n   * Handle authentication switch request : dispatch to plugin handler.\n   *\n   * @param packet  packet\n   * @param out     output writer\n   * @param opts    options\n   * @param info    connection information\n   */\n  dispatchAuthSwitchRequest(packet, out, opts, info) {\n    let pluginName, pluginData;\n    if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n      packet.skip(1); //header\n      if (packet.remaining()) {\n        //AuthSwitchRequest packet.\n        pluginName = packet.readStringNullEnded();\n        pluginData = packet.readBufferRemaining();\n      } else {\n        //OldAuthSwitchRequest\n        pluginName = 'mysql_old_password';\n        pluginData = info.seed.slice(0, 8);\n      }\n    } else {\n      pluginName = packet.readStringNullEnded('ascii');\n      pluginData = packet.readBufferRemaining();\n    }\n    if (opts.restrictedAuth && !opts.restrictedAuth.includes(pluginName)) {\n      this.throwNewError(`Unsupported authentication plugin ${pluginName}. Authorized plugin: ${opts.restrictedAuth.toString()}`, true, info, '42000', Errors.ER_NOT_SUPPORTED_AUTH_PLUGIN);\n      return;\n    }\n    try {\n      this.plugin = Handshake.pluginHandler(pluginName, this.plugin.sequenceNo, this.plugin.compressSequenceNo, pluginData, info, opts, out, this.cmdParam, this.resolve, this.reject, this.handshakeResult.bind(this));\n    } catch (err) {\n      this.reject(err);\n      return;\n    }\n    this._addCommand(this.plugin);\n  }\n  static pluginHandler(pluginName, packSeq, compressPackSeq, pluginData, info, opts, out, cmdParam, authResolve, authReject, multiAuthResolver) {\n    let pluginAuth;\n    switch (pluginName) {\n      case 'mysql_native_password':\n        pluginAuth = require('./auth/native-password-auth.js');\n        break;\n      case 'mysql_clear_password':\n        pluginAuth = require('./auth/clear-password-auth.js');\n        break;\n      case 'client_ed25519':\n        pluginAuth = require('./auth/ed25519-password-auth.js');\n        break;\n      case 'dialog':\n        pluginAuth = require('./auth/pam-password-auth.js');\n        break;\n      case 'sha256_password':\n        pluginAuth = require('./auth/sha256-password-auth.js');\n        break;\n      case 'caching_sha2_password':\n        pluginAuth = require('./auth/caching-sha2-password-auth.js');\n        break;\n\n      //TODO \"auth_gssapi_client\"\n\n      default:\n        throw Errors.createFatalError(`Client does not support authentication protocol '${pluginName}' requested by server.`, Errors.ER_AUTHENTICATION_PLUGIN_NOT_SUPPORTED, info, '08004');\n    }\n    return new pluginAuth(packSeq, compressPackSeq, pluginData, cmdParam, authResolve, authReject, multiAuthResolver);\n  }\n}\nmodule.exports = Handshake;","map":{"version":3,"names":["Command","require","InitialHandshake","ClientHandshakeResponse","SslRequest","ClientCapabilities","Errors","Capabilities","Collations","Handshake","constructor","cmdParam","resolve","reject","_createSecureContext","_addCommand","getSocket","onPacketReceive","parseHandshakeInit","plugin","packet","out","opts","info","peek","authErr","readError","fatal","throwError","handshake","collation","charset","maxLength","fromIndex","init","ssl","serverCapabilities","SSL","clientCapabilities","send","bind","pluginName","throwNewError","ER_SERVER_SSL_DISABLED","handshakeResult","marker","emit","dispatchAuthSwitchRequest","skip","skipLengthCodedNumber","status","readUInt16","successEnd","displaySql","ER_AUTHENTICATION_BAD_PACKET","pluginData","PLUGIN_AUTH","remaining","readStringNullEnded","readBufferRemaining","seed","slice","restrictedAuth","includes","toString","ER_NOT_SUPPORTED_AUTH_PLUGIN","pluginHandler","sequenceNo","compressSequenceNo","err","packSeq","compressPackSeq","authResolve","authReject","multiAuthResolver","pluginAuth","createFatalError","ER_AUTHENTICATION_PLUGIN_NOT_SUPPORTED","module","exports"],"sources":["/home/warameur/Documents/velocity-data-viz/node_modules/mariadb/lib/cmd/handshake/handshake.js"],"sourcesContent":["'use strict';\n\nconst Command = require('../command');\nconst InitialHandshake = require('./initial-handshake');\nconst ClientHandshakeResponse = require('./client-handshake-response');\nconst SslRequest = require('./ssl-request');\nconst ClientCapabilities = require('./client-capabilities');\nconst Errors = require('../../misc/errors');\nconst Capabilities = require('../../const/capabilities');\nconst Collations = require('../../const/collations');\n\n/**\n * Handle handshake.\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/\n */\nclass Handshake extends Command {\n  constructor(cmdParam, resolve, reject, _createSecureContext, _addCommand, getSocket) {\n    super(cmdParam, resolve, reject);\n    this.cmdParam = cmdParam;\n    this._createSecureContext = _createSecureContext;\n    this._addCommand = _addCommand;\n    this.getSocket = getSocket;\n    this.onPacketReceive = this.parseHandshakeInit;\n    this.plugin = this;\n  }\n\n  parseHandshakeInit(packet, out, opts, info) {\n    if (packet.peek() === 0xff) {\n      //in case that some host is not permit to connect server\n      const authErr = packet.readError(info);\n      authErr.fatal = true;\n      return this.throwError(authErr, info);\n    }\n\n    let handshake = new InitialHandshake(packet, info);\n\n    // handle default collation.\n    if (opts.collation) {\n      // collation has been set using charset.\n      // If server use same charset, use server collation.\n      if (!opts.charset || info.collation.charset !== opts.collation.charset) {\n        info.collation = opts.collation;\n      }\n    } else if (info.collation.charset !== 'utf8' || info.collation.maxLength === 3) {\n      // if not utf8mb4 and no configuration, force to use UTF8MB4_UNICODE_CI\n      info.collation = Collations.fromIndex(224);\n    }\n\n    ClientCapabilities.init(opts, info);\n\n    if (opts.ssl) {\n      if (info.serverCapabilities & Capabilities.SSL) {\n        info.clientCapabilities |= Capabilities.SSL;\n        SslRequest.send(this, out, info, opts);\n        this._createSecureContext(ClientHandshakeResponse.send.bind(this, this, out, opts, handshake.pluginName, info));\n      } else {\n        return this.throwNewError(\n          'Trying to connect with ssl, but ssl not enabled in the server',\n          true,\n          info,\n          '08S01',\n          Errors.ER_SERVER_SSL_DISABLED\n        );\n      }\n    } else {\n      ClientHandshakeResponse.send(this, out, opts, handshake.pluginName, info);\n    }\n    this.onPacketReceive = this.handshakeResult;\n  }\n\n  /**\n   * Fast-path handshake results :\n   *  - if plugin was the one expected by server, server will send OK_Packet / ERR_Packet.\n   *  - if not, server send an AuthSwitchRequest packet, indicating the specific PLUGIN to use with this user.\n   *    dispatching to plugin handler then.\n   *\n   * @param packet    current packet\n   * @param out       output buffer\n   * @param opts      options\n   * @param info      connection info\n   * @returns {*}     return null if authentication succeed, depending on plugin conversation if not finished\n   */\n  handshakeResult(packet, out, opts, info) {\n    const marker = packet.peek();\n    switch (marker) {\n      //*********************************************************************************************************\n      //* AuthSwitchRequest packet\n      //*********************************************************************************************************\n      case 0xfe:\n        this.plugin.onPacketReceive = null;\n        this.plugin.emit('send_end');\n        this.plugin.emit('end');\n        this.dispatchAuthSwitchRequest(packet, out, opts, info);\n        return;\n\n      //*********************************************************************************************************\n      //* OK_Packet - authentication succeeded\n      //*********************************************************************************************************\n      case 0x00:\n        this.plugin.onPacketReceive = null;\n        packet.skip(1); //skip header\n        packet.skipLengthCodedNumber(); //skip affected rows\n        packet.skipLengthCodedNumber(); //skip last insert id\n        info.status = packet.readUInt16();\n        this.plugin.emit('send_end');\n        return this.plugin.successEnd();\n\n      //*********************************************************************************************************\n      //* ERR_Packet\n      //*********************************************************************************************************\n      case 0xff:\n        this.plugin.onPacketReceive = null;\n        const authErr = packet.readError(info, this.displaySql());\n        authErr.fatal = true;\n        return this.plugin.throwError(authErr, info);\n\n      //*********************************************************************************************************\n      //* unexpected\n      //*********************************************************************************************************\n      default:\n        this.throwNewError(\n          `Unexpected type of packet during handshake phase : ${marker}`,\n          true,\n          info,\n          '42000',\n          Errors.ER_AUTHENTICATION_BAD_PACKET\n        );\n    }\n  }\n\n  /**\n   * Handle authentication switch request : dispatch to plugin handler.\n   *\n   * @param packet  packet\n   * @param out     output writer\n   * @param opts    options\n   * @param info    connection information\n   */\n  dispatchAuthSwitchRequest(packet, out, opts, info) {\n    let pluginName, pluginData;\n    if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n      packet.skip(1); //header\n      if (packet.remaining()) {\n        //AuthSwitchRequest packet.\n        pluginName = packet.readStringNullEnded();\n        pluginData = packet.readBufferRemaining();\n      } else {\n        //OldAuthSwitchRequest\n        pluginName = 'mysql_old_password';\n        pluginData = info.seed.slice(0, 8);\n      }\n    } else {\n      pluginName = packet.readStringNullEnded('ascii');\n      pluginData = packet.readBufferRemaining();\n    }\n\n    if (opts.restrictedAuth && !opts.restrictedAuth.includes(pluginName)) {\n      this.throwNewError(\n        `Unsupported authentication plugin ${pluginName}. Authorized plugin: ${opts.restrictedAuth.toString()}`,\n        true,\n        info,\n        '42000',\n        Errors.ER_NOT_SUPPORTED_AUTH_PLUGIN\n      );\n      return;\n    }\n    try {\n      this.plugin = Handshake.pluginHandler(\n        pluginName,\n        this.plugin.sequenceNo,\n        this.plugin.compressSequenceNo,\n        pluginData,\n        info,\n        opts,\n        out,\n        this.cmdParam,\n        this.resolve,\n        this.reject,\n        this.handshakeResult.bind(this)\n      );\n    } catch (err) {\n      this.reject(err);\n      return;\n    }\n\n    this._addCommand(this.plugin);\n  }\n\n  static pluginHandler(\n    pluginName,\n    packSeq,\n    compressPackSeq,\n    pluginData,\n    info,\n    opts,\n    out,\n    cmdParam,\n    authResolve,\n    authReject,\n    multiAuthResolver\n  ) {\n    let pluginAuth;\n    switch (pluginName) {\n      case 'mysql_native_password':\n        pluginAuth = require('./auth/native-password-auth.js');\n        break;\n\n      case 'mysql_clear_password':\n        pluginAuth = require('./auth/clear-password-auth.js');\n        break;\n\n      case 'client_ed25519':\n        pluginAuth = require('./auth/ed25519-password-auth.js');\n        break;\n\n      case 'dialog':\n        pluginAuth = require('./auth/pam-password-auth.js');\n        break;\n\n      case 'sha256_password':\n        pluginAuth = require('./auth/sha256-password-auth.js');\n        break;\n\n      case 'caching_sha2_password':\n        pluginAuth = require('./auth/caching-sha2-password-auth.js');\n        break;\n\n      //TODO \"auth_gssapi_client\"\n\n      default:\n        throw Errors.createFatalError(\n          `Client does not support authentication protocol '${pluginName}' requested by server.`,\n          Errors.ER_AUTHENTICATION_PLUGIN_NOT_SUPPORTED,\n          info,\n          '08004'\n        );\n    }\n    return new pluginAuth(packSeq, compressPackSeq, pluginData, cmdParam, authResolve, authReject, multiAuthResolver);\n  }\n}\n\nmodule.exports = Handshake;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}