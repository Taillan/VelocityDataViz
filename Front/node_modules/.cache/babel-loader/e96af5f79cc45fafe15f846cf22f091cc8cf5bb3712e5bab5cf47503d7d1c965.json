{"ast":null,"code":"var _jsxFileName = \"/home/warameur/Documents/velocity-data-viz/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Chartjs from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet i = 0;\nconst chartConfig = {\n  responsive: true,\n  legend: {\n    display: true,\n    position: 'top',\n    labels: {\n      filter: function (legendItem, chartData) {\n        i++;\n        return i <= 6;\n      }\n    },\n    onClick: e => e.stopPropagation()\n  },\n  scales: {\n    yAxes: [{\n      barPercentage: 1.0,\n      categoryPercentage: 1.0,\n      ticks: {\n        callback: function (value, index, values) {\n          return value + ' lei';\n        },\n        fontColor: '#75c0cc',\n        beginAtZero: true\n      },\n      gridLines: {\n        display: false\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        fontColor: '#75c0cc'\n      },\n      gridLines: {\n        offsetGridLines: false\n      }\n    }]\n  }\n};\nclass Chart extends Component {\n  buildComparisonChart(_ref) {\n    let {\n      data,\n      numOfMonths,\n      ctx,\n      recentYear,\n      pastYear\n    } = _ref;\n    let recentYearData = data.filter(monthlyData => monthlyData.year === recentYear);\n    let pastYearData = data.filter(monthlyData => monthlyData.year === pastYear);\n    recentYearData = recentYearData.filter(monthlyData => {\n      return pastYearData.find(pastmonthlyData => monthlyData.month === pastmonthlyData.month);\n    });\n    pastYearData = pastYearData.filter(monthlyData => {\n      return recentYearData.find(recentmonthlyData => monthlyData.month === recentmonthlyData.month);\n    });\n    recentYearData = this.getLastNElems(numOfMonths, recentYearData);\n    pastYearData = this.getLastNElems(numOfMonths, pastYearData);\n    return new Chartjs(ctx, {\n      type: 'bar',\n      data: {\n        labels: [...this.mapToProp(\"month\", recentYearData).map(month => {\n          return `${pastYear} ${month} ${recentYear}`;\n        })],\n        datasets: [{\n          backgroundColor: '#f05548',\n          data: [...this.mapToProp(\"energy\", pastYearData)],\n          label: 'Electricitate'\n        }, {\n          data: [...this.mapToProp(\"gas\", pastYearData)],\n          backgroundColor: '#56b9c4',\n          label: 'Gaz'\n        }, {\n          backgroundColor: '#f05548',\n          data: [...this.mapToProp(\"energy\", recentYearData)],\n          label: 'Electricitate'\n        }, {\n          backgroundColor: '#56b9c4',\n          data: [...this.mapToProp(\"gas\", recentYearData)],\n          label: 'Gaz'\n        }]\n      },\n      options: chartConfig\n    });\n  }\n  componentDidMount() {\n    const {\n      data,\n      numOfMonths,\n      comparedYears: {\n        recentYear,\n        pastYear\n      } = {}\n    } = this.props;\n    let ctx = this.canvas.getContext(\"2d\");\n    if (recentYear || pastYear) {\n      return this.buildComparisonChart({\n        data,\n        numOfMonths,\n        ctx,\n        recentYear,\n        pastYear\n      });\n    }\n    this.buildChart({\n      data,\n      numOfMonths,\n      ctx\n    });\n  }\n\n  // returns the last n elems in the array\n  getLastNElems(n, arr) {\n    return arr.slice(arr.length - n);\n  }\n\n  // returns the array as a list of prop values. Ex: mapToProp(\"cost\", [{cost: 12}, {cost: 2}]) returns [12, 2];\n  mapToProp(prop, arr) {\n    return arr.map(el => {\n      if (el[prop]) {\n        return el[prop];\n      } else {\n        throw new Error(\"The data elements do not have the property requested. In mapToProp\");\n      }\n    });\n  }\n  buildChart(_ref2) {\n    let {\n      data,\n      numOfMonths,\n      ctx\n    } = _ref2;\n    let filteredData = this.getLastNElems(numOfMonths, data);\n    return new Chartjs(ctx, {\n      type: 'bar',\n      data: {\n        labels: [...this.mapToProp(\"month\", filteredData)],\n        datasets: [{\n          data: [...this.mapToProp(\"energy\", filteredData)],\n          backgroundColor: '#f05548',\n          label: 'Electricitate'\n        }, {\n          data: [...this.mapToProp(\"gas\", filteredData)],\n          backgroundColor: '#56b9c4',\n          label: 'Gaz'\n        }]\n      },\n      options: chartConfig\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas => this.canvas = canvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n// ------------------------------ MOCK DATA ---------------------------------------------------\n\nconst genRand = (begin, end) => Math.floor(Math.random() * end) + begin;\nconst data = [{\n  year: 2016,\n  month: \"Ian\",\n  energy: 23,\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Feb\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Mar\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Apr\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Mai\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Iun\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Iul\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Aug\",\n  energy: genRand(100, 500),\n  gas: 99\n}, {\n  year: 2016,\n  month: \"Sep\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Oct\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Noi\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2016,\n  month: \"Dec\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Ian\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Feb\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Mar\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Apr\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Mai\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Iun\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Iul\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Aug\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Sep\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Oct\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Noi\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2017,\n  month: \"Dec\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}, {\n  year: 2018,\n  month: \"Ian\",\n  energy: genRand(100, 500),\n  gas: genRand(50, 700)\n}];\nReactDOM.render( /*#__PURE__*/_jsxDEV(Chart, {\n  data: data,\n  numOfMonths: 6,\n  comparedYears: {\n    recentYear: 2017,\n    pastYear: 2016\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 187,\n  columnNumber: 3\n}, this), document.querySelector(\"#root\"));\n\n//comparedYears={{ recentYear: 2017, pastYear: 2016 }}","map":{"version":3,"names":["React","Component","ReactDOM","PropTypes","Chartjs","jsxDEV","_jsxDEV","i","chartConfig","responsive","legend","display","position","labels","filter","legendItem","chartData","onClick","e","stopPropagation","scales","yAxes","barPercentage","categoryPercentage","ticks","callback","value","index","values","fontColor","beginAtZero","gridLines","xAxes","offsetGridLines","Chart","buildComparisonChart","_ref","data","numOfMonths","ctx","recentYear","pastYear","recentYearData","monthlyData","year","pastYearData","find","pastmonthlyData","month","recentmonthlyData","getLastNElems","type","mapToProp","map","datasets","backgroundColor","label","options","componentDidMount","comparedYears","props","canvas","getContext","buildChart","n","arr","slice","length","prop","el","Error","_ref2","filteredData","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","genRand","begin","end","Math","floor","random","energy","gas","document","querySelector"],"sources":["/home/warameur/Documents/velocity-data-viz/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Chartjs from 'chart.js';\n\nlet i = 0;\n\nconst chartConfig = {\n  responsive: true,\n  legend: {\n    display: true,\n    position: 'top',\n    labels: {\n      filter: function (legendItem, chartData) {\n        i++;\n        return i <= 6;\n      }\n    },\n    onClick: (e) => e.stopPropagation()\n  },\n  scales: {\n    yAxes: [{\n      barPercentage: 1.0,\n      categoryPercentage: 1.0,\n      ticks: {\n        callback: function (value, index, values) {\n          return value + ' lei';\n        },\n        fontColor: '#75c0cc',\n        beginAtZero: true\n      },\n      gridLines: {\n        display: false\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        fontColor: '#75c0cc'\n      },\n      gridLines: {\n        offsetGridLines: false\n      }\n    }],\n  }\n};\n\nclass Chart extends Component {\n  buildComparisonChart({ data, numOfMonths, ctx, recentYear, pastYear }) {\n    let recentYearData = data.filter(monthlyData => monthlyData.year === recentYear);\n    let pastYearData = data.filter(monthlyData => monthlyData.year === pastYear);\n\n    recentYearData = recentYearData.filter(monthlyData => {\n      return pastYearData.find(pastmonthlyData => monthlyData.month === pastmonthlyData.month);\n    });\n    pastYearData = pastYearData.filter(monthlyData => {\n      return recentYearData.find(recentmonthlyData => monthlyData.month === recentmonthlyData.month);\n    });\n\n    recentYearData = this.getLastNElems(numOfMonths, recentYearData);\n    pastYearData = this.getLastNElems(numOfMonths, pastYearData);\n\n    return new Chartjs(ctx, {\n      type: 'bar',\n      data: {\n        labels: [...this.mapToProp(\"month\", recentYearData).map(month => {\n          return `${pastYear} ${month} ${recentYear}`;\n        })],\n        datasets: [\n          {\n            backgroundColor: '#f05548',\n            data: [...this.mapToProp(\"energy\", pastYearData)],\n            label: 'Electricitate',\n          },\n          {\n            data: [...this.mapToProp(\"gas\", pastYearData)],\n            backgroundColor: '#56b9c4',\n            label: 'Gaz'\n          },\n          {\n            backgroundColor: '#f05548',\n            data: [...this.mapToProp(\"energy\", recentYearData)],\n            label: 'Electricitate'\n          },\n          {\n            backgroundColor: '#56b9c4',\n            data: [...this.mapToProp(\"gas\", recentYearData)],\n            label: 'Gaz'\n          },\n        ],\n      },\n        options: chartConfig\n    });\n  }\n\n\n  componentDidMount() {\n    const { data, numOfMonths, comparedYears: { recentYear, pastYear } = {} } = this.props;\n    let ctx = this.canvas.getContext(\"2d\");\n\n    if (recentYear || pastYear) {\n      return this.buildComparisonChart({ data, numOfMonths, ctx, recentYear, pastYear });\n    }\n\n    this.buildChart({ data, numOfMonths, ctx });\n  }\n\n  // returns the last n elems in the array\n  getLastNElems(n, arr) {\n    return arr.slice(arr.length - n);\n  }\n\n  // returns the array as a list of prop values. Ex: mapToProp(\"cost\", [{cost: 12}, {cost: 2}]) returns [12, 2];\n  mapToProp(prop, arr) {\n    return arr.map(el => {\n      if (el[prop]) {\n        return el[prop];\n      } else {\n        throw new Error(\"The data elements do not have the property requested. In mapToProp\");\n      }\n    });\n  }\n\n  buildChart({ data, numOfMonths, ctx }) {\n    let filteredData = this.getLastNElems(numOfMonths, data);\n\n    return new Chartjs(ctx, {\n      type: 'bar',\n      data: {\n        labels: [...this.mapToProp(\"month\", filteredData)],\n        datasets: [\n          {\n            data: [...this.mapToProp(\"energy\", filteredData)],\n            backgroundColor: '#f05548',\n            label: 'Electricitate',\n          },\n          {\n            data: [...this.mapToProp(\"gas\", filteredData)],\n            backgroundColor: '#56b9c4',\n            label: 'Gaz'\n          }\n        ]\n      },\n      options: chartConfig\n    });\n  }\n\n  render() {\n    return <canvas ref={(canvas) => this.canvas = canvas}></canvas>\n  }\n}\n\n\n\n// ------------------------------ MOCK DATA ---------------------------------------------------\n\nconst genRand = (begin, end) => Math.floor(Math.random() * end) + begin;\n\nconst data = [\n  { year: 2016, month: \"Ian\", energy: 23, gas: genRand(50, 700) },\n  { year: 2016, month: \"Feb\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Mar\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Apr\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Mai\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Iun\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Iul\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Aug\", energy: genRand(100, 500), gas: 99 },\n  { year: 2016, month: \"Sep\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Oct\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Noi\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2016, month: \"Dec\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Ian\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Feb\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Mar\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Apr\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Mai\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Iun\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Iul\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Aug\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Sep\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Oct\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Noi\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2017, month: \"Dec\", energy: genRand(100, 500), gas: genRand(50, 700) },\n  { year: 2018, month: \"Ian\", energy: genRand(100, 500), gas: genRand(50, 700) },\n]\n\nReactDOM.render(\n  <Chart data={data} numOfMonths={6} comparedYears={{ recentYear: 2017, pastYear: 2016 }}/>,\n  document.querySelector(\"#root\")\n);\n\n//comparedYears={{ recentYear: 2017, pastYear: 2016 }}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,IAAIC,CAAC,GAAG,CAAC;AAET,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE;IACNC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE,KAAK;IACfC,MAAM,EAAE;MACNC,MAAM,EAAE,SAAAA,CAAUC,UAAU,EAAEC,SAAS,EAAE;QACvCT,CAAC,EAAE;QACH,OAAOA,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IACDU,OAAO,EAAGC,CAAC,IAAKA,CAAC,CAACC,eAAe;EACnC,CAAC;EACDC,MAAM,EAAE;IACNC,KAAK,EAAE,CAAC;MACNC,aAAa,EAAE,GAAG;MAClBC,kBAAkB,EAAE,GAAG;MACvBC,KAAK,EAAE;QACLC,QAAQ,EAAE,SAAAA,CAAUC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;UACxC,OAAOF,KAAK,GAAG,MAAM;QACvB,CAAC;QACDG,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE;MACf,CAAC;MACDC,SAAS,EAAE;QACTpB,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IACFqB,KAAK,EAAE,CAAC;MACNR,KAAK,EAAE;QACLK,SAAS,EAAE;MACb,CAAC;MACDE,SAAS,EAAE;QACTE,eAAe,EAAE;MACnB;IACF,CAAC;EACH;AACF,CAAC;AAED,MAAMC,KAAK,SAASjC,SAAS,CAAC;EAC5BkC,oBAAoBA,CAAAC,IAAA,EAAmD;IAAA,IAAlD;MAAEC,IAAI;MAAEC,WAAW;MAAEC,GAAG;MAAEC,UAAU;MAAEC;IAAS,CAAC,GAAAL,IAAA;IACnE,IAAIM,cAAc,GAAGL,IAAI,CAACvB,MAAM,CAAC6B,WAAW,IAAIA,WAAW,CAACC,IAAI,KAAKJ,UAAU,CAAC;IAChF,IAAIK,YAAY,GAAGR,IAAI,CAACvB,MAAM,CAAC6B,WAAW,IAAIA,WAAW,CAACC,IAAI,KAAKH,QAAQ,CAAC;IAE5EC,cAAc,GAAGA,cAAc,CAAC5B,MAAM,CAAC6B,WAAW,IAAI;MACpD,OAAOE,YAAY,CAACC,IAAI,CAACC,eAAe,IAAIJ,WAAW,CAACK,KAAK,KAAKD,eAAe,CAACC,KAAK,CAAC;IAC1F,CAAC,CAAC;IACFH,YAAY,GAAGA,YAAY,CAAC/B,MAAM,CAAC6B,WAAW,IAAI;MAChD,OAAOD,cAAc,CAACI,IAAI,CAACG,iBAAiB,IAAIN,WAAW,CAACK,KAAK,KAAKC,iBAAiB,CAACD,KAAK,CAAC;IAChG,CAAC,CAAC;IAEFN,cAAc,GAAG,IAAI,CAACQ,aAAa,CAACZ,WAAW,EAAEI,cAAc,CAAC;IAChEG,YAAY,GAAG,IAAI,CAACK,aAAa,CAACZ,WAAW,EAAEO,YAAY,CAAC;IAE5D,OAAO,IAAIzC,OAAO,CAACmC,GAAG,EAAE;MACtBY,IAAI,EAAE,KAAK;MACXd,IAAI,EAAE;QACJxB,MAAM,EAAE,CAAC,GAAG,IAAI,CAACuC,SAAS,CAAC,OAAO,EAAEV,cAAc,CAAC,CAACW,GAAG,CAACL,KAAK,IAAI;UAC/D,OAAQ,GAAEP,QAAS,IAAGO,KAAM,IAAGR,UAAW,EAAC;QAC7C,CAAC,CAAC,CAAC;QACHc,QAAQ,EAAE,CACR;UACEC,eAAe,EAAE,SAAS;UAC1BlB,IAAI,EAAE,CAAC,GAAG,IAAI,CAACe,SAAS,CAAC,QAAQ,EAAEP,YAAY,CAAC,CAAC;UACjDW,KAAK,EAAE;QACT,CAAC,EACD;UACEnB,IAAI,EAAE,CAAC,GAAG,IAAI,CAACe,SAAS,CAAC,KAAK,EAAEP,YAAY,CAAC,CAAC;UAC9CU,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE;QACT,CAAC,EACD;UACED,eAAe,EAAE,SAAS;UAC1BlB,IAAI,EAAE,CAAC,GAAG,IAAI,CAACe,SAAS,CAAC,QAAQ,EAAEV,cAAc,CAAC,CAAC;UACnDc,KAAK,EAAE;QACT,CAAC,EACD;UACED,eAAe,EAAE,SAAS;UAC1BlB,IAAI,EAAE,CAAC,GAAG,IAAI,CAACe,SAAS,CAAC,KAAK,EAAEV,cAAc,CAAC,CAAC;UAChDc,KAAK,EAAE;QACT,CAAC;MAEL,CAAC;MACCC,OAAO,EAAEjD;IACb,CAAC,CAAC;EACJ;EAGAkD,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAAErB,IAAI;MAAEC,WAAW;MAAEqB,aAAa,EAAE;QAAEnB,UAAU;QAAEC;MAAS,CAAC,GAAG,CAAC;IAAE,CAAC,GAAG,IAAI,CAACmB,KAAK;IACtF,IAAIrB,GAAG,GAAG,IAAI,CAACsB,MAAM,CAACC,UAAU,CAAC,IAAI,CAAC;IAEtC,IAAItB,UAAU,IAAIC,QAAQ,EAAE;MAC1B,OAAO,IAAI,CAACN,oBAAoB,CAAC;QAAEE,IAAI;QAAEC,WAAW;QAAEC,GAAG;QAAEC,UAAU;QAAEC;MAAS,CAAC,CAAC;IACpF;IAEA,IAAI,CAACsB,UAAU,CAAC;MAAE1B,IAAI;MAAEC,WAAW;MAAEC;IAAI,CAAC,CAAC;EAC7C;;EAEA;EACAW,aAAaA,CAACc,CAAC,EAAEC,GAAG,EAAE;IACpB,OAAOA,GAAG,CAACC,KAAK,CAACD,GAAG,CAACE,MAAM,GAAGH,CAAC,CAAC;EAClC;;EAEA;EACAZ,SAASA,CAACgB,IAAI,EAAEH,GAAG,EAAE;IACnB,OAAOA,GAAG,CAACZ,GAAG,CAACgB,EAAE,IAAI;MACnB,IAAIA,EAAE,CAACD,IAAI,CAAC,EAAE;QACZ,OAAOC,EAAE,CAACD,IAAI,CAAC;MACjB,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,oEAAoE,CAAC;MACvF;IACF,CAAC,CAAC;EACJ;EAEAP,UAAUA,CAAAQ,KAAA,EAA6B;IAAA,IAA5B;MAAElC,IAAI;MAAEC,WAAW;MAAEC;IAAI,CAAC,GAAAgC,KAAA;IACnC,IAAIC,YAAY,GAAG,IAAI,CAACtB,aAAa,CAACZ,WAAW,EAAED,IAAI,CAAC;IAExD,OAAO,IAAIjC,OAAO,CAACmC,GAAG,EAAE;MACtBY,IAAI,EAAE,KAAK;MACXd,IAAI,EAAE;QACJxB,MAAM,EAAE,CAAC,GAAG,IAAI,CAACuC,SAAS,CAAC,OAAO,EAAEoB,YAAY,CAAC,CAAC;QAClDlB,QAAQ,EAAE,CACR;UACEjB,IAAI,EAAE,CAAC,GAAG,IAAI,CAACe,SAAS,CAAC,QAAQ,EAAEoB,YAAY,CAAC,CAAC;UACjDjB,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE;QACT,CAAC,EACD;UACEnB,IAAI,EAAE,CAAC,GAAG,IAAI,CAACe,SAAS,CAAC,KAAK,EAAEoB,YAAY,CAAC,CAAC;UAC9CjB,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE;QACT,CAAC;MAEL,CAAC;MACDC,OAAO,EAAEjD;IACX,CAAC,CAAC;EACJ;EAEAiE,MAAMA,CAAA,EAAG;IACP,oBAAOnE,OAAA;MAAQoE,GAAG,EAAGb,MAAM,IAAK,IAAI,CAACA,MAAM,GAAGA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EACjE;AACF;;AAIA;;AAEA,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,GAAG,CAAC,GAAGD,KAAK;AAEvE,MAAM3C,IAAI,GAAG,CACX;EAAEO,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAE,EAAE;EAAEC,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC/D;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAE;AAAG,CAAC,EAChE;EAAE1C,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,EAC9E;EAAEnC,IAAI,EAAE,IAAI;EAAEI,KAAK,EAAE,KAAK;EAAEqC,MAAM,EAAEN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EAAEO,GAAG,EAAEP,OAAO,CAAC,EAAE,EAAE,GAAG;AAAE,CAAC,CAC/E;AAED7E,QAAQ,CAACuE,MAAM,eACbnE,OAAA,CAAC4B,KAAK;EAACG,IAAI,EAAEA,IAAK;EAACC,WAAW,EAAE,CAAE;EAACqB,aAAa,EAAE;IAAEnB,UAAU,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK;AAAE;EAAAkC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAE,EACzFS,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAChC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}