{"ast":null,"code":"'use strict';\n\nconst Command = require('./command');\nconst PING_COMMAND = new Uint8Array([1, 0, 0, 0, 0x0e]);\n\n/**\n * send a COM_PING: permits sending a packet containing one byte to check that the connection is active.\n * see https://mariadb.com/kb/en/library/com_ping/\n */\nclass Ping extends Command {\n  constructor(cmdParam, resolve, reject) {\n    super(cmdParam, resolve, reject);\n  }\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query('PING');\n    this.onPacketReceive = this.readPingResponsePacket;\n    out.fastFlush(this, PING_COMMAND);\n    this.emit('send_end');\n  }\n\n  /**\n   * Read ping response packet.\n   * packet can be :\n   * - an ERR_Packet\n   * - an OK_Packet\n   *\n   * @param packet  query response\n   * @param out     output writer\n   * @param opts    connection options\n   * @param info    connection info\n   */\n  readPingResponsePacket(packet, out, opts, info) {\n    packet.skip(1); //skip header\n    packet.skipLengthCodedNumber(); //affected rows\n    packet.skipLengthCodedNumber(); //insert ids\n    info.status = packet.readUInt16();\n    this.successEnd(null);\n  }\n}\nmodule.exports = Ping;","map":{"version":3,"names":["Command","require","PING_COMMAND","Uint8Array","Ping","constructor","cmdParam","resolve","reject","start","out","opts","info","logger","query","onPacketReceive","readPingResponsePacket","fastFlush","emit","packet","skip","skipLengthCodedNumber","status","readUInt16","successEnd","module","exports"],"sources":["/home/warameur/Documents/velocity-data-viz/node_modules/mariadb/lib/cmd/ping.js"],"sourcesContent":["'use strict';\n\nconst Command = require('./command');\n\nconst PING_COMMAND = new Uint8Array([1, 0, 0, 0, 0x0e]);\n\n/**\n * send a COM_PING: permits sending a packet containing one byte to check that the connection is active.\n * see https://mariadb.com/kb/en/library/com_ping/\n */\nclass Ping extends Command {\n  constructor(cmdParam, resolve, reject) {\n    super(cmdParam, resolve, reject);\n  }\n\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query('PING');\n    this.onPacketReceive = this.readPingResponsePacket;\n    out.fastFlush(this, PING_COMMAND);\n    this.emit('send_end');\n  }\n\n  /**\n   * Read ping response packet.\n   * packet can be :\n   * - an ERR_Packet\n   * - an OK_Packet\n   *\n   * @param packet  query response\n   * @param out     output writer\n   * @param opts    connection options\n   * @param info    connection info\n   */\n  readPingResponsePacket(packet, out, opts, info) {\n    packet.skip(1); //skip header\n    packet.skipLengthCodedNumber(); //affected rows\n    packet.skipLengthCodedNumber(); //insert ids\n    info.status = packet.readUInt16();\n    this.successEnd(null);\n  }\n}\n\nmodule.exports = Ping;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEpC,MAAMC,YAAY,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;;AAEvD;AACA;AACA;AACA;AACA,MAAMC,IAAI,SAASJ,OAAO,CAAC;EACzBK,WAAWA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACrC,KAAK,CAACF,QAAQ,EAAEC,OAAO,EAAEC,MAAM,CAAC;EAClC;EAEAC,KAAKA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;IACrB,IAAID,IAAI,CAACE,MAAM,CAACC,KAAK,EAAEH,IAAI,CAACE,MAAM,CAACC,KAAK,CAAC,MAAM,CAAC;IAChD,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,sBAAsB;IAClDN,GAAG,CAACO,SAAS,CAAC,IAAI,EAAEf,YAAY,CAAC;IACjC,IAAI,CAACgB,IAAI,CAAC,UAAU,CAAC;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEF,sBAAsBA,CAACG,MAAM,EAAET,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC9CO,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChBD,MAAM,CAACE,qBAAqB,EAAE,CAAC,CAAC;IAChCF,MAAM,CAACE,qBAAqB,EAAE,CAAC,CAAC;IAChCT,IAAI,CAACU,MAAM,GAAGH,MAAM,CAACI,UAAU,EAAE;IACjC,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC;EACvB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGtB,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}