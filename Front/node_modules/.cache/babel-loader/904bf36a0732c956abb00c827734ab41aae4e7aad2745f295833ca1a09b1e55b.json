{"ast":null,"code":"'use strict';\n\nconst Capabilities = require('../../const/capabilities');\nconst Iconv = require('iconv-lite');\nconst NativePasswordAuth = require('./auth/native-password-auth');\nconst Ed25519PasswordAuth = require('./auth/ed25519-password-auth');\nconst driverVersion = require('../../../package.json').version;\nconst os = require('os');\n\n/**\n * Send Handshake response packet\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/#handshake-response-packet\n *\n * @param cmd         current handshake command\n * @param out         output writer\n * @param opts        connection options\n * @param pluginName  plugin name\n * @param info        connection information\n */\nmodule.exports.send = function send(cmd, out, opts, pluginName, info) {\n  out.startPacket(cmd);\n  info.defaultPluginName = pluginName;\n  const pwd = Array.isArray(opts.password) ? opts.password[0] : opts.password;\n  let authToken;\n  let authPlugin;\n  switch (pluginName) {\n    case 'client_ed25519':\n      authToken = Ed25519PasswordAuth.encryptPassword(pwd, info.seed);\n      authPlugin = 'client_ed25519';\n      break;\n    case 'mysql_clear_password':\n      authToken = Buffer.from(pwd);\n      authPlugin = 'mysql_clear_password';\n      break;\n    default:\n      authToken = NativePasswordAuth.encryptSha1Password(pwd, info.seed);\n      authPlugin = 'mysql_native_password';\n      break;\n  }\n  out.writeInt32(Number(info.clientCapabilities & BigInt(0xffffffff)));\n  out.writeInt32(1024 * 1024 * 1024); // max packet size\n  out.writeInt8(info.collation.index);\n  for (let i = 0; i < 19; i++) {\n    out.writeInt8(0);\n  }\n  out.writeInt32(Number(info.clientCapabilities >> 32n));\n\n  //null encoded user\n  out.writeString(opts.user || '');\n  out.writeInt8(0);\n  if (info.serverCapabilities & Capabilities.PLUGIN_AUTH_LENENC_CLIENT_DATA) {\n    out.writeLengthCoded(authToken.length);\n    out.writeBuffer(authToken, 0, authToken.length);\n  } else if (info.serverCapabilities & Capabilities.SECURE_CONNECTION) {\n    out.writeInt8(authToken.length);\n    out.writeBuffer(authToken, 0, authToken.length);\n  } else {\n    out.writeBuffer(authToken, 0, authToken.length);\n    out.writeInt8(0);\n  }\n  if (info.clientCapabilities & Capabilities.CONNECT_WITH_DB) {\n    out.writeString(opts.database);\n    out.writeInt8(0);\n    info.database = opts.database;\n  }\n  if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n    out.writeString(authPlugin);\n    out.writeInt8(0);\n  }\n  if (info.clientCapabilities & Capabilities.CONNECT_ATTRS) {\n    out.writeInt8(0xfc);\n    let initPos = out.pos; //save position, assuming connection attributes length will be less than 2 bytes length\n    out.writeInt16(0);\n    const encoding = info.collation.charset;\n    writeParam(out, '_client_name', encoding);\n    writeParam(out, 'MariaDB connector/Node', encoding);\n    writeParam(out, '_client_version', encoding);\n    writeParam(out, driverVersion, encoding);\n    const address = cmd.getSocket().address().address;\n    if (address) {\n      writeParam(out, '_server_host', encoding);\n      writeParam(out, address, encoding);\n    }\n    writeParam(out, '_os', encoding);\n    writeParam(out, process.platform, encoding);\n    writeParam(out, '_client_host', encoding);\n    writeParam(out, os.hostname(), encoding);\n    writeParam(out, '_node_version', encoding);\n    writeParam(out, process.versions.node, encoding);\n    if (opts.connectAttributes !== true) {\n      let attrNames = Object.keys(opts.connectAttributes);\n      for (let k = 0; k < attrNames.length; ++k) {\n        writeParam(out, attrNames[k], encoding);\n        writeParam(out, opts.connectAttributes[attrNames[k]], encoding);\n      }\n    }\n\n    //write end size\n    out.writeInt16AtPos(initPos);\n  }\n  out.flushPacket();\n};\nfunction writeParam(out, val, encoding) {\n  let param = Buffer.isEncoding(encoding) ? Buffer.from(val, encoding) : Iconv.encode(val, encoding);\n  out.writeLengthCoded(param.length);\n  out.writeBuffer(param, 0, param.length);\n}","map":{"version":3,"names":["Capabilities","require","Iconv","NativePasswordAuth","Ed25519PasswordAuth","driverVersion","version","os","module","exports","send","cmd","out","opts","pluginName","info","startPacket","defaultPluginName","pwd","Array","isArray","password","authToken","authPlugin","encryptPassword","seed","Buffer","from","encryptSha1Password","writeInt32","Number","clientCapabilities","BigInt","writeInt8","collation","index","i","writeString","user","serverCapabilities","PLUGIN_AUTH_LENENC_CLIENT_DATA","writeLengthCoded","length","writeBuffer","SECURE_CONNECTION","CONNECT_WITH_DB","database","PLUGIN_AUTH","CONNECT_ATTRS","initPos","pos","writeInt16","encoding","charset","writeParam","address","getSocket","process","platform","hostname","versions","node","connectAttributes","attrNames","Object","keys","k","writeInt16AtPos","flushPacket","val","param","isEncoding","encode"],"sources":["/home/warameur/Documents/velocity-data-viz/node_modules/mariadb/lib/cmd/handshake/client-handshake-response.js"],"sourcesContent":["'use strict';\n\nconst Capabilities = require('../../const/capabilities');\nconst Iconv = require('iconv-lite');\nconst NativePasswordAuth = require('./auth/native-password-auth');\nconst Ed25519PasswordAuth = require('./auth/ed25519-password-auth');\nconst driverVersion = require('../../../package.json').version;\nconst os = require('os');\n\n/**\n * Send Handshake response packet\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/#handshake-response-packet\n *\n * @param cmd         current handshake command\n * @param out         output writer\n * @param opts        connection options\n * @param pluginName  plugin name\n * @param info        connection information\n */\nmodule.exports.send = function send(cmd, out, opts, pluginName, info) {\n  out.startPacket(cmd);\n  info.defaultPluginName = pluginName;\n  const pwd = Array.isArray(opts.password) ? opts.password[0] : opts.password;\n  let authToken;\n  let authPlugin;\n  switch (pluginName) {\n    case 'client_ed25519':\n      authToken = Ed25519PasswordAuth.encryptPassword(pwd, info.seed);\n      authPlugin = 'client_ed25519';\n      break;\n\n    case 'mysql_clear_password':\n      authToken = Buffer.from(pwd);\n      authPlugin = 'mysql_clear_password';\n      break;\n\n    default:\n      authToken = NativePasswordAuth.encryptSha1Password(pwd, info.seed);\n      authPlugin = 'mysql_native_password';\n      break;\n  }\n  out.writeInt32(Number(info.clientCapabilities & BigInt(0xffffffff)));\n  out.writeInt32(1024 * 1024 * 1024); // max packet size\n  out.writeInt8(info.collation.index);\n\n  for (let i = 0; i < 19; i++) {\n    out.writeInt8(0);\n  }\n\n  out.writeInt32(Number(info.clientCapabilities >> 32n));\n\n  //null encoded user\n  out.writeString(opts.user || '');\n  out.writeInt8(0);\n\n  if (info.serverCapabilities & Capabilities.PLUGIN_AUTH_LENENC_CLIENT_DATA) {\n    out.writeLengthCoded(authToken.length);\n    out.writeBuffer(authToken, 0, authToken.length);\n  } else if (info.serverCapabilities & Capabilities.SECURE_CONNECTION) {\n    out.writeInt8(authToken.length);\n    out.writeBuffer(authToken, 0, authToken.length);\n  } else {\n    out.writeBuffer(authToken, 0, authToken.length);\n    out.writeInt8(0);\n  }\n\n  if (info.clientCapabilities & Capabilities.CONNECT_WITH_DB) {\n    out.writeString(opts.database);\n    out.writeInt8(0);\n    info.database = opts.database;\n  }\n\n  if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n    out.writeString(authPlugin);\n    out.writeInt8(0);\n  }\n\n  if (info.clientCapabilities & Capabilities.CONNECT_ATTRS) {\n    out.writeInt8(0xfc);\n    let initPos = out.pos; //save position, assuming connection attributes length will be less than 2 bytes length\n    out.writeInt16(0);\n    const encoding = info.collation.charset;\n\n    writeParam(out, '_client_name', encoding);\n    writeParam(out, 'MariaDB connector/Node', encoding);\n\n    writeParam(out, '_client_version', encoding);\n    writeParam(out, driverVersion, encoding);\n\n    const address = cmd.getSocket().address().address;\n    if (address) {\n      writeParam(out, '_server_host', encoding);\n      writeParam(out, address, encoding);\n    }\n\n    writeParam(out, '_os', encoding);\n    writeParam(out, process.platform, encoding);\n\n    writeParam(out, '_client_host', encoding);\n    writeParam(out, os.hostname(), encoding);\n\n    writeParam(out, '_node_version', encoding);\n    writeParam(out, process.versions.node, encoding);\n\n    if (opts.connectAttributes !== true) {\n      let attrNames = Object.keys(opts.connectAttributes);\n      for (let k = 0; k < attrNames.length; ++k) {\n        writeParam(out, attrNames[k], encoding);\n        writeParam(out, opts.connectAttributes[attrNames[k]], encoding);\n      }\n    }\n\n    //write end size\n    out.writeInt16AtPos(initPos);\n  }\n\n  out.flushPacket();\n};\n\nfunction writeParam(out, val, encoding) {\n  let param = Buffer.isEncoding(encoding) ? Buffer.from(val, encoding) : Iconv.encode(val, encoding);\n  out.writeLengthCoded(param.length);\n  out.writeBuffer(param, 0, param.length);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}